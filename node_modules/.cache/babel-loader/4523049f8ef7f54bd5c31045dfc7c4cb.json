{"ast":null,"code":"export default function parseNumber(strg) {\n  var strg = strg || \"\";\n  var decimal = '.';\n  strg = strg.replace(/[^0-9$.,]/g, '');\n  if (strg.indexOf(',') > strg.indexOf('.')) decimal = ',';\n  if ((strg.match(new RegExp(\"\\\\\" + decimal, \"g\")) || []).length > 1) decimal = \"\";\n  if (decimal != \"\" && strg.length - strg.indexOf(decimal) - 1 == 3 && strg.indexOf(\"0\" + decimal) !== 0) decimal = \"\";\n  strg = strg.replace(new RegExp(\"[^0-9$\" + decimal + \"]\", \"g\"), \"\");\n  strg = strg.replace(',', '.');\n  return parseFloat(strg);\n}","map":{"version":3,"sources":["C:/Users/nam07/Desktop/WEB_SERVER/DBS_assignment_2/src/components/products/parseNumber.js"],"names":["parseNumber","strg","decimal","replace","indexOf","match","RegExp","length","parseFloat"],"mappings":"AAAA,eAAe,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AACxC,MAAIA,IAAI,GAAGA,IAAI,IAAI,EAAnB;AACA,MAAIC,OAAO,GAAG,GAAd;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,YAAb,EAA2B,EAA3B,CAAP;AACA,MAAIF,IAAI,CAACG,OAAL,CAAa,GAAb,IAAoBH,IAAI,CAACG,OAAL,CAAa,GAAb,CAAxB,EAA2CF,OAAO,GAAG,GAAV;AAC3C,MAAI,CAACD,IAAI,CAACI,KAAL,CAAW,IAAIC,MAAJ,CAAW,OAAOJ,OAAlB,EAA2B,GAA3B,CAAX,KAA+C,EAAhD,EAAoDK,MAApD,GAA6D,CAAjE,EAAoEL,OAAO,GAAG,EAAV;AACpE,MAAIA,OAAO,IAAI,EAAX,IAAkBD,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACG,OAAL,CAAaF,OAAb,CAAd,GAAsC,CAAtC,IAA2C,CAA7D,IAAmED,IAAI,CAACG,OAAL,CAAa,MAAMF,OAAnB,MAAgC,CAAvG,EAA0GA,OAAO,GAAG,EAAV;AAC1GD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,IAAIG,MAAJ,CAAW,WAAWJ,OAAX,GAAqB,GAAhC,EAAqC,GAArC,CAAb,EAAwD,EAAxD,CAAP;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACE,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAAP;AACA,SAAOK,UAAU,CAACP,IAAD,CAAjB;AACD","sourcesContent":["export default function parseNumber(strg) {\r\n  var strg = strg || \"\";\r\n  var decimal = '.';\r\n  strg = strg.replace(/[^0-9$.,]/g, '');\r\n  if (strg.indexOf(',') > strg.indexOf('.')) decimal = ',';\r\n  if ((strg.match(new RegExp(\"\\\\\" + decimal, \"g\")) || []).length > 1) decimal = \"\";\r\n  if (decimal != \"\" && (strg.length - strg.indexOf(decimal) - 1 == 3) && strg.indexOf(\"0\" + decimal) !== 0) decimal = \"\";\r\n  strg = strg.replace(new RegExp(\"[^0-9$\" + decimal + \"]\", \"g\"), \"\");\r\n  strg = strg.replace(',', '.');\r\n  return parseFloat(strg);\r\n}"]},"metadata":{},"sourceType":"module"}